server:
  port: 7889
spring:
  application:
    name: consumer_1
  cloud:
    stream:
      kafka:
        binder:
          brokers: 192.168.200.242:9092         #Kafka\u7684\u6D88\u606F\u4E2D\u95F4\u4EF6\u670D\u52A1\u5668
          zk-nodes: 192.168.200.242:2181        #Zookeeper\u7684\u8282\u70B9\uFF0C\u5982\u679C\u96C6\u7FA4\uFF0C\u540E\u9762\u52A0,\u53F7\u5206\u9694
          auto-create-topics: true
      bindings:
        myInput: #\u81EA\u5B9A\u4E49input
          destination: kafka-demo
          group: group  #\u5206\u7EC4\u7684\u7EC4\u540D
          consumer:
            partitioned: true  #\u5F00\u542F\u5206\u533A
        input_1: #\u81EA\u5B9A\u4E49input
          destination: kafka-demo1
          group: group1  #\u5206\u7EC4\u7684\u7EC4\u540D
          consumer:
            partitioned: true  #\u5F00\u542F\u5206\u533A
        input_2: #\u81EA\u5B9A\u4E49input
          destination: kafka-demo2
          group: group2 #\u5206\u7EC4\u7684\u7EC4\u540D
          consumer:
            partitioned: true  #\u5F00\u542F\u5206\u533A
        trans_input:    #trans_input \u8FDB\u884C\u6D88\u606F\u4E2D\u8F6C\u5904\u7406\u540E\uFF0C\u4E2D\u8F6C\u8F93\u5165\u7BA1\u9053
          destination: test
        trans_output:    #trans_output \u8FDB\u884C\u6D88\u606F\u4E2D\u8F6C\u5904\u7406\u540E\uFF0C\u4E2D\u8F6C\u8F93\u51FA\u7BA1\u9053
          destination: kafka-demo-trans
      #\u5206\u533A\u6570\u91CF
      instance-count: 2
      #\u8BBE\u7F6E\u5F53\u524D\u5B9E\u4F8B\u7684\u7D22\u5F15\u53F7\uFF0C\u4ECE 0 \u5F00\u59CB
      instance-index: 0